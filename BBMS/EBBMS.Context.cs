//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BBMS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EBBMSEntities : DbContext
    {
        public EBBMSEntities()
            : base("name=EBBMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<blood_bag> blood_bag { get; set; }
        public virtual DbSet<blood_camp> blood_camp { get; set; }
        public virtual DbSet<donor> donors { get; set; }
        public virtual DbSet<donor_health_info> donor_health_info { get; set; }
        public virtual DbSet<hospital> hospitals { get; set; }
        public virtual DbSet<hospital_provides_service> hospital_provides_service { get; set; }
        public virtual DbSet<login> logins { get; set; }
        public virtual DbSet<service> services { get; set; }
        public virtual DbSet<shift_manager> shift_manager { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<user_uses_service> user_uses_service { get; set; }
        public virtual DbSet<shift> shifts { get; set; }
    
        public virtual int insert_admin(string username, string user_pass)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var user_passParameter = user_pass != null ?
                new ObjectParameter("user_pass", user_pass) :
                new ObjectParameter("user_pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_admin", usernameParameter, user_passParameter);
        }
    
        public virtual int insert_blood_camp(Nullable<int> hospital_id, string driver_name)
        {
            var hospital_idParameter = hospital_id.HasValue ?
                new ObjectParameter("hospital_id", hospital_id) :
                new ObjectParameter("hospital_id", typeof(int));
    
            var driver_nameParameter = driver_name != null ?
                new ObjectParameter("driver_name", driver_name) :
                new ObjectParameter("driver_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_blood_camp", hospital_idParameter, driver_nameParameter);
        }
    
        public virtual int insert_hospital(string username, string user_pass, string hospital_name, string phone, string city, string governorate)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var user_passParameter = user_pass != null ?
                new ObjectParameter("user_pass", user_pass) :
                new ObjectParameter("user_pass", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var governorateParameter = governorate != null ?
                new ObjectParameter("governorate", governorate) :
                new ObjectParameter("governorate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_hospital", usernameParameter, user_passParameter, hospital_nameParameter, phoneParameter, cityParameter, governorateParameter);
        }
    
        public virtual int insert_service(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_service", nameParameter);
        }
    
        public virtual int insert_shift_manager(string username, string user_pass, string name)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var user_passParameter = user_pass != null ?
                new ObjectParameter("user_pass", user_pass) :
                new ObjectParameter("user_pass", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_shift_manager", usernameParameter, user_passParameter, nameParameter);
        }
    
        public virtual int insert_user(string username, string user_pass, Nullable<long> national_id, string name, string gender, Nullable<byte> age, string phone, string city, string governorate)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var user_passParameter = user_pass != null ?
                new ObjectParameter("user_pass", user_pass) :
                new ObjectParameter("user_pass", typeof(string));
    
            var national_idParameter = national_id.HasValue ?
                new ObjectParameter("national_id", national_id) :
                new ObjectParameter("national_id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(byte));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var governorateParameter = governorate != null ?
                new ObjectParameter("governorate", governorate) :
                new ObjectParameter("governorate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_user", usernameParameter, user_passParameter, national_idParameter, nameParameter, genderParameter, ageParameter, phoneParameter, cityParameter, governorateParameter);
        }
    
        public virtual int insert_volunteer(Nullable<long> national_id, string name, string gender, Nullable<byte> age, Nullable<long> phone, string city, string governorate)
        {
            var national_idParameter = national_id.HasValue ?
                new ObjectParameter("national_id", national_id) :
                new ObjectParameter("national_id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(byte));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var governorateParameter = governorate != null ?
                new ObjectParameter("governorate", governorate) :
                new ObjectParameter("governorate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_volunteer", national_idParameter, nameParameter, genderParameter, ageParameter, phoneParameter, cityParameter, governorateParameter);
        }
    }
}
