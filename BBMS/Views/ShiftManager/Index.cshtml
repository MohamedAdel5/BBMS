@model BBMS.Models.Volunteer
@{
    ViewBag.Title = "ShiftManager dashboard";
    Layout = "~/Views/Shared/_ShiftMgrLayout.cshtml";

}

<h2>Confirm User Donation</h2>

@using (Html.BeginForm("GrantUser", "ShiftManager", FormMethod.Post, new { @id = "form1" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-md-4 ">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Please fill the form</h3>
                    </div>
                    <div class="panel-body">
                        <form accept-charset="UTF-8" role="form">
                            <fieldset>
                                <div class="form-group">
                                    <input type="text" name="username" class="form-control" placeholder="Username" />
                                    @if (ViewBag.invalidUsername == true)
                                    {
                                        <label class="text-danger">Invalid Username</label>
                                    }
                                </div>
                                <div class="form-group">
                                    <input type="number" name="points" class="form-control" placeholder="Points" min="10" max="100" />
                                </div>
                                <input class="btn btn-lg btn-danger btn-block" type="submit" value="confirm">
                                @if (ViewBag.successUsername == true)
                                {
                                    <label class="text-success">Done!</label>
                                }
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<hr />

<h2>Confirm Volunteer Donation</h2>

@using (Html.BeginForm("AddVolunteer", "ShiftManager", FormMethod.Post, new { @id = "form2" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.national_id, "National ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.national_id, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.national_id, "", new { @class = "text-danger" })
            @if (IsPost && ViewBag.DuplicateNationalID == true)
            {
                <label class="text-danger">This National ID is already registered</label>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.age, "Age", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.age, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.governorate, "Governorate", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.governorate, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.governorate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.city, "City", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.city, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.gender, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <label for="male">Male</label>
            @Html.RadioButtonFor(m => m.gender, "M", new { @id = "male" })
            <label for="female">Female</label>
            @Html.RadioButtonFor(m => m.gender, "F", new { @id = "female" })
            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phone, "Phone number", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="confirm" class="btn btn-lg btn-danger btn-block" />
            <button class="btn btn-sm btn-default btn-block" onclick="document.getElementById('#form2').reset();">Clear form</button>
        </div>
        @if(ViewBag.successVolunteer == true)
        {
            <label class="text-success">Done!</label>
        }
    </div>
}
<hr />
